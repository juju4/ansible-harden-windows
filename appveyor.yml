---
version: 0.1.x.{build}
skip_commits:
  message: /^\(?doc|travis\)?.*/
clone_depth: 10
init:
  - SET
  - 'echo System architecture: %PLATFORM%'
  - 'echo %APPVEYOR_REPO_NAME%'

environment:
  winrm_user: winrm_test_user
  winrm_password: WinRM_test_Pass@w0rd1
  APPVEYOR_RDP_PASSWORD: WinRM_test_Pass@w0rd1
  user_cert: c:\projects\ansible-harden-windows\user.pem
  user_key: c:\projects\ansible-harden-windows\key.pem
  user_pfx: c:\projects\ansible-harden-windows\user.pfx
  CYGWIN: winsymlinks:nativestrict

  matrix:
    - SUITE: default
      ANSIBLE_VERSION: 5.3.0
      ANSIBLE_EXTRA_VARS:
      TARGET: cygwin64
      CYG_ROOT: C:\cygwin64
      CYG_SETUP: C:\cygwin64\setup-x86_64.exe
      CYG_CACHE: C:\cygwin64\var\cache\setup
      CYG_BASH: C:\cygwin64\bin\sh
    - SUITE: default
      ANSIBLE_VERSION: 4.10.0
      ANSIBLE_EXTRA_VARS:
      TARGET: cygwin64
      CYG_ROOT: C:\cygwin64
      CYG_SETUP: C:\cygwin64\setup-x86_64.exe
      CYG_CACHE: C:\cygwin64\var\cache\setup
      CYG_BASH: C:\cygwin64\bin\sh
    - SUITE: default-HEAD
      ANSIBLE_VERSION: 5.3.0
      ANSIBLE_EXTRA_VARS:
      TARGET: cygwin64
      CYG_ROOT: C:\cygwin64
      CYG_SETUP: C:\cygwin64\setup-x86_64.exe
      CYG_CACHE: C:\cygwin64\var\cache\setup
      CYG_BASH: C:\cygwin64\bin\sh
    - SUITE: full
      ANSIBLE_VERSION: 5.3.0
      ANSIBLE_EXTRA_VARS:
      TARGET: cygwin64
      CYG_ROOT: C:\cygwin64
      CYG_SETUP: C:\cygwin64\setup-x86_64.exe
      CYG_CACHE: C:\cygwin64\var\cache\setup
      CYG_BASH: C:\cygwin64\bin\sh
matrix:
  fast_finish: true

install:
  # setup winrm
  - ps: net user /Y /add $env:winrm_user $env:winrm_password
  - ps: net localgroup administrators $env:winrm_user /add
  - ps: $env:PATH="C:\OpenSSL-Win64\bin;$env:PATH"
  - ps: Import-Module $env:APPVEYOR_BUILD_FOLDER\test\appveyor\WinrmAppveyor.psm1
  - ps: New-ClientCertificate $env:winrm_user $env:APPVEYOR_BUILD_FOLDER
  - ps: $env:user_cert_thumb = (Import-pfxCertificate -FilePath $env:user_pfx -CertStoreLocation Cert:\LocalMachine\root).Thumbprint
  - ps: Import-pfxCertificate -FilePath $env:user_pfx -CertStoreLocation Cert:\LocalMachine\TrustedPeople
  - ps: $env:winrm_cert = (New-SelfSignedCertificate -DnsName localhost -CertStoreLocation cert:\localmachine\my).Thumbprint
  - ps: winrm create winrm/config/Listener?Address=*+Transport=HTTPS "@{Hostname=`"localhost`";CertificateThumbprint=`"$($env:winrm_cert)`"}"
  - ps: winrm set winrm/config/client/auth '@{Basic="true"}'
  - ps: winrm set winrm/config/service/auth '@{Basic="true"}'
  - ps: winrm set winrm/config/service/auth '@{Certificate="true"}'
  - ps: winrm set winrm/config/service/auth '@{CbtHardeningLevel="Strict"}'
  - ps: winrm set winrm/config/service '@{AllowUnencrypted="true"}'
  - ps: New-WinrmUserCertificateMapping $env:user_cert_thumb
  - ps: $env:PATH="C:\Ruby$env:ruby_version\bin;$env:PATH"
  - ps: Write-Host $env:PATH
  - ps: ($pwd).path
  - ps: |
      Get-ChildItem -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
  # setup ansible
  - cmd: "%CYG_SETUP% -qgnNdO -l %CYG_CACHE% -R %CYG_ROOT% -s http://cygwin.mirror.constant.com -P libssl-devel -P python2-devel -P python3-devel -P curl -P python-jinja -P python-crypto -P python-openssl -P python-setuptools -P git -P libffi-devel -P libcrypt-devel -P openssl-devel -P python36-cryptography"
  - cmd: "%CYG_BASH% -lc 'openssl version'"
  - cmd: "%CYG_BASH% -lc 'uname -a'"
  - cmd: "%CYG_BASH% -lc 'python -m ensurepip'"
  - cmd: "%CYG_BASH% -lc 'python3 -m ensurepip'"
  - cmd: "%CYG_BASH% -lc 'python3 -m pip install cryptography==3.3.2'"
  - cmd: "%CYG_BASH% -lc 'python3 -m pip install --upgrade pip'"
  - cmd: "%CYG_BASH% -lc 'python3 -m pip install pywinrm'"
  - cmd: "%CYG_BASH% -lc 'python3 -m pip install ansible==%ANSIBLE_VERSION%'"
  - cmd: "%CYG_BASH% -lc 'ansible --version'"
  - cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm'"
  # - cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm > inventory'"
  # - cmd: "%CYG_BASH% -lc 'cat inventory'"
  # - cmd: "%CYG_BASH% -lc 'echo localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm | tee inventory'"
  # - cmd: "%CYG_BASH% -lc 'cat inventory'"
  # - ps: echo "localhost ansible_user=$env:winrm_user ansible_password=$env:winrm_password ansible_connection=winrm" | Out-file c:\inventory
  # - ps: Get-ChildItem -Path c:\
  # - ps: Get-Content -Path c:\inventory
  # - ps: |
  #     $filepath = "C:\inventory"
  #     $Acl = Get-ACL $filepath
  #     $AccessRule= New-Object System.Security.AccessControl.FileSystemAccessRule("everyone","full","none","none","Allow")
  #     $Acl.AddAccessRule($AccessRule)
  #     Set-Acl $filepath $Acl
  - cmd: "%CYG_BASH% -lc 'ls /'"
  - cmd: "%CYG_BASH% -lc 'ls -l /cygdrive/c/'"
  # - cmd: "%CYG_BASH% -lc 'cat /cygdrive/c/inventory'"
  - cmd: "%CYG_BASH% -lc 'ls -l /cygdrive/c/projects/ansible-harden-windows'"
  - cmd: "%CYG_BASH% -lc pwd"
  # - cmd: "%CYG_BASH% -lc env"
  # - cmd: "%CYG_BASH% -lc 'find -ls'"
  - cmd: "%CYG_BASH% -lc 'ansible -i /cygdrive/c/projects/ansible-harden-windows/test/appveyor/inventory -m win_ping -vvv localhost'"
  # NOK
  # - cmd: "%CYG_BASH% -lc 'ln -s /cygdrive/c/projects/ansible-harden-windows /etc/ansible/roles/juju4.harden-windows'"
  - cmd: "%CYG_BASH% -lc 'mkdir -p /etc/ansible/roles'"
  - cmd: "%CYG_BASH% -lc 'cp /cygdrive/c/projects/ansible-harden-windows/test/appveyor/ansible.cfg /etc/ansible'"
  - cmd: "%CYG_BASH% -lc 'cp -R /cygdrive/c/projects/ansible-harden-windows /etc/ansible/roles/juju4.harden-windows'"
  - cmd: "%CYG_BASH% -lc 'sh -x /cygdrive/c/projects/ansible-harden-windows/get-dependencies.sh'"

build: off
test_script:
  - cmd: "%CYG_BASH% -lc 'ansible-playbook /cygdrive/c/projects/ansible-harden-windows/test/integration/$SUITE/default.yml --syntax-check'"
  - cmd: "%CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-harden-windows/test/appveyor/inventory /cygdrive/c/projects/ansible-harden-windows/test/integration/$SUITE/default.yml -vvv $ANSIBLE_EXTRA_VARS'"

for:
  - matrix:
      only:
        - SUITE: default
    after_test:
      # Test idempotence
      # %CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-harden-windows/test/appveyor/inventory /cygdrive/c/projects/ansible-harden-windows/test/integration/$SUITE/default.yml $ANSIBLE_EXTRA_VARS | tee /tmp/idempotency.log | grep -q "changed=0.*failed=0" && (echo "Idempotence test: pass" && exit 0) || (echo "Idempotence test: fail" && cat /tmp/idempotency.log && exit 0)'
      - cmd: |
          %CYG_BASH% -lc 'ansible-playbook -i /cygdrive/c/projects/ansible-harden-windows/test/appveyor/inventory /cygdrive/c/projects/ansible-harden-windows/test/integration/$SUITE/default.yml $ANSIBLE_EXTRA_VARS'
      - cmd: cinst -y notepadplusplus

on_failure:
  # - ps: |
  #     Get-Content -Path C:\windows\TEMP\chocolatey\KB3035131.Install.evt
  #     True
  # - ps: |
  #     Get-Content -Path C:\windows\Logs\CBS\CBS.log
  #     True
  # - ps: |
  #     Get-Content -Path C:\ProgramData\chocolatey\logs\chocolatey.log
  #     True
  # - ps: Get-ChildItem -Recurse -Path "c:\Program Files\ansible"
  - ps: |
      Get-WinEvent -LogName 'Microsoft-Windows-AppLocker/EXE and DLL' | Where { $_.ID -eq 8004 }
      True
  - cmd: "%CYG_BASH% -lc 'ansible -i /cygdrive/c/projects/ansible-harden-windows/test/appveyor/inventory -m setup -vvv localhost'"

on_finish:
  - ps: |
      Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.hta" -Recurse
  - ps: |
      Get-PSDrive -PSProvider Registry
      New-PSDrive -Name HKCR -PSProvider Registry -Root Registry::HKEY_CLASSES_ROOT
      Get-ChildItem -Path "HKCR:\htafile\shell\open\command" -Recurse
  - ps: |
      Get-ChildItem -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"
  - ps: |
      New-PSDrive -Name HKU -PSProvider Registry -Root Registry::HKEY_USERS
      Get-ChildItem -Path "HKU:\*\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.hta" -Recurse
  - ps: |
      #Get-ChildItem -Path "HKLM:\SOFTWARE\Microsoft\Office\16.0\Common\COM Compatibility\{0002CE02-0000- 0000-C000-000000000046}"
      Get-ChildItem -Path "HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\SSL 2.0\Server"
      #Get-Eventlog -LogName security -Newest 100 -EntryType FailureAudit
      True
  - ps: |
      Get-Content -Path c:\ProgramData\ansible\log\densityscout-results.txt
      True
  - cmd: c:\opscode\inspec\bin\inspec.bat --chef-license accept || exit 0
  - cmd: c:\opscode\inspec\bin\inspec.bat exec %APPVEYOR_BUILD_FOLDER%\test\inspec --attrs %APPVEYOR_BUILD_FOLDER%\test\inspec\profile-attributes-Windows.yml | tee c:\inspec.log || exit 0

notifications:
  - provider: Email
    to:
      - nobody@nowhere.com
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false
