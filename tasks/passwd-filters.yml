---
## https://msdn.microsoft.com/en-us/library/windows/desktop/ms722496(v=vs.85).aspx
## https://amarkulo.com/integrating-database-of-pwned-password-hashes-with-microsoft-ad/
## https://github.com/jephthai/OpenPasswordFilter
## https://haveibeenpwned.com/passwords
## https://jacksonvd.com/checking-for-breached-passwords-in-active-directory/
## https://github.com/ryanries/PassFiltEx

- name: check if OpenPasswordFilter archive is present
  win_stat:
    path: "{{ harden_win_temp_dir }}\\{{ opf_url | basename }}"
  register: opfdl
- name: download OpenPasswordFilter
  win_get_url:
    url: "{{ opf_url }}"
    dest: "{{ harden_win_temp_dir }}\\{{ opf_url | basename }}"
    # FIXME! no checksum option, https://github.com/ansible/ansible-modules-core/issues/4901
  when: not opfdl.stat.exists
  register: dl_result
  until: dl_result is success

- name: check if OpenPasswordFilter password list is present
  win_stat: path="c:\\windows\\system32\\opfmatch.txt"
  register: opfpass
- name: download password list
  win_get_url:
    url: "{{ opf_passwd_list_url }}"
    dest: "c:\\windows\\system32\\opfmatch.txt"
  when: not opfpass.stat.exists
  register: dl_result
  until: dl_result is success

- name: check if OpenPasswordFilter password list is present for partial match
  win_stat: path="c:\\windows\\system32\\opfconf.txt"
  register: opfpass2
- name: download password list for partial match
  win_get_url:
    url: "{{ opf_passwd_list_partial_url }}"
    dest: "c:\\windows\\system32\\opfconf.txt"
  when: not opfpass2.stat.exists
  register: dl_result
  until: dl_result is success

- name: Uncompress OPF
  win_unzip:
    src: "{{ harden_win_temp_dir }}\\{{ opf_url | basename }}"
    dest: "{{ harden_win_temp_dir }}\\opf"
    creates: "{{ harden_win_temp_dir }}\\opf\\OpenPasswordFilter.dll"

## note: once configured in registry, dll will be locked/used by lsass.exe
- name: Copy OPF dll to system32
  ## BUG original_basename
  # win_copy:
  #   src: "{{ harden_win_temp_dir }}\\opf\\{{ item }}"
  #   dest: "c:\\windows\\system32\\{{ item }}"
  #   remote_src: true
  win_shell: "Copy-Item {{ harden_win_temp_dir }}\\opf\\x64\\{{ item }} c:\\windows\\system32\\{{ item }}"
  args:
    creates: "c:\\windows\\system32\\{{ item }}"
  with_items:
    - "OpenPasswordFilter.dll"
    - "OPFService.exe"

- name: create OPF service
  # win_service:
  #   name: OpenPasswordFilter
  #   path: "c:\\windows\\system32\\OPFService.exe"
  #   start_mode: auto
  #   state: started
  win_shell: >
    New-Service -Name OpenPasswordFilter
      -BinaryPathName c:\\windows\\system32\\OPFService.exe
      -Description "OpenPasswordFilter service to prevent dictionary passwords"
      -StartupType Automatic
  failed_when: false

## FIXME! error 'SHIM_GOTO_CONTROLPANEL'
##    https://support.microsoft.com/en-us/help/2715633/shim-errors-for-the--net-framework-version-and-platform-support
##  NOK ws2016: without or with .Net Framework 3.5
##  NOK amarkulo, ws2016: service started and stopped. no error message
- name: Ensure OPF service is started
  win_service:
    name: OpenPasswordFilter
    state: started

## ws2016: initial value = 'rassfm\0scecli'
- name: retrieving Notification registry value
  win_shell: >
    reg query "HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa" /v "Notification Packages" |
    findstr REG_MULTI_SZ
  changed_when: false
  register: reg1
- name: Set notification_packages
  ansible.builtin.set_fact:
    notification_packages: >
      "{{ reg1.stdout | regex_replace('^\\s+Notification Packages\\s+REG_MULTI_SZ\\s+(.*)\\r\\n$', '\\1') }}"
- name: Debug | reg1 output
  ansible.builtin.debug: var=reg1.stdout_lines
- name: Debug | notification_packages
  ansible.builtin.debug: var=notification_packages

- name: Enable Password filters
  win_regedit:
    key: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
    value: Notification Packages
    datatype: multistring
    data: "{{ notification_packages }}\\0OpenPasswordFilter"
  when: not "'OpenPasswordFilter' in notification_packages"
